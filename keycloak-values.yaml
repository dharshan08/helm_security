image:
  registry: docker.io
  repository: bitnami/keycloak
  tag: 26.1.3-debian-12-r0
  pullPolicy: IfNotPresent

auth:
  adminUser: admin
  adminPassword: admin

postgresql:
  enabled: false  # Using external DB
externalDatabase:
  host: identitydb-postgresql
  user: keycloak
  password: keycloak
  database: keycloak

extraEnvVars:
  - name: KC_HTTP_ENABLED
    value: "true"
  - name: KC_HOSTNAME
    value: identity.virtual33.myguest.virtualbox.org
  - name: KC_HTTPS_PORT
    value: "8443"
  - name: KC_HOSTNAME_STRICT
    value: "false"
  - name: KC_HOSTNAME_STRICT_HTTPS
    value: "true"
  - name: KC_PROXY
    value: "edge"

      #extraVolumes:
      #  - name: keycloak-certs
      #    secret:
      #      secretName: keycloak-certs

      #extraVolumeMounts:
      #  - name: keycloak-certs
      #    mountPath: /etc/x509/https
      #    readOnly: true

service:
  type: ClusterIP
  ports:
    http: 8080
    https: null

ingress:
  enabled: true
  hostname: identity.virtual33.myguest.virtualbox.org
  ingressClassName: traefik
  tls: true
  annotations:
    cert-manager.io/cluster-issuer: "selfsigned-issuer"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  extraTls:
    - hosts:
        - identity.virtual33.myguest.virtualbox.org
      secretName: keycloak-tls
  extraPaths: []
  pathType: Prefix
  path: /

tls:
  enabled: false
  autoGenerated: false

resources:
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 250m
    memory: 512Mi

persistence:
  enabled: true
  size: 8Gi

livenessProbe:
  enabled: false

readinessProbe:
  enabled: false

proxyAddressForwarding: true

extraEnvVars:
  - name: KEYCLOAK_FRONTEND_URL
    value: "https://identity.virtual33.myguest.virtualbox.org/"
  - name: CONSOLE_SETUP_SECRET
    valueFrom:
      secretKeyRef:
        name: keycloak-client-secrets
        key: console-setup
  - name: XML2JSON_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: keycloak-client-secrets
        key: kafka-producer-pm-xml2json
  - name: JSON2KAFKA_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: keycloak-client-secrets
        key: pm-producer-json2kafka
  - name: DFC_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: keycloak-client-secrets
        key: dfc
  - name: PMLOG_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        name: keycloak-client-secrets
        key: nrt-pm-log

keycloakConfigCli:
  enabled: true
  configuration:
    nonrtric-realm.json: |
      {
        "realm": "nonrtric-realm",
        "enabled": true,
        "clients": [
          {
            "clientId": "console-setup",
            "publicClient": false,
            "secret": "${CONSOLE_SETUP_SECRET}"
          },
          {
            "clientId": "kafka-producer-pm-xml2json",
            "publicClient": false,
            "secret": "${XML2JSON_CLIENT_SECRET}"
          },
          {
            "clientId": "pm-producer-json2kafka",
            "publicClient": false,
            "secret": "${JSON2KAFKA_CLIENT_SECRET}"
          },
          {
            "clientId": "dfc",
            "publicClient": false,
            "secret": "${DFC_CLIENT_SECRET}"
          },
          {
            "clientId": "nrt-pm-log",
            "publicClient": false,
            "secret": "${PMLOG_CLIENT_SECRET}"
          }
        ]
      }

